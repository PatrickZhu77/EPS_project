os_mpu_wrappers.h

#define xTaskGetTickOverflowCount               MPU_xTaskGetTickOverflowCount


os_mpu_wrappers.c

BaseType_t MPU_xTaskGetTickOverflowCount( void )
{
    BaseType_t xReturn;
    BaseType_t xRunningPrivileged = prvRaisePrivilege();
    xReturn = xTaskGetTickOverflowCount();
    portRESET_PRIVILEGE( xRunningPrivileged );
    return xReturn;
}



os_tasks.h

/**
 * task. h
 * <PRE>BaseType_t xTaskGetTickOverflowCount( void );</PRE>
 *
 * @return The count of tick overflows since vTaskStartScheduler was called.
 *
 * \defgroup xTaskGetTickOverflowCount xTaskGetTickOverflowCount
 * \ingroup TaskUtils
 */
BaseType_t xTaskGetTickOverflowCount( void ) PRIVILEGED_FUNCTION;




os_tasks.c

BaseType_t xTaskGetTickOverflowCount( void )
{
 BaseType_t xTicks;

    /* Critical section required if running on a 16 bit processor. */
    portTICK_TYPE_ENTER_CRITICAL();
    {
        xTicks = xNumOfOverflows;
    }
    portTICK_TYPE_EXIT_CRITICAL();

    return xTicks;
}


